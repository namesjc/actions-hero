server {
    listen  443 ssl;
    server_name    default_server;

    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    lua_ssl_trusted_certificate /etc/nginx/ssl/ca.crt;


    # root    /opt/nginx/html;
    resolver 127.0.0.11  valid=1s    ipv6=off;

    access_by_lua '
    local opts = {
        redirect_uri_path = "/redirect_uri",
        accept_none_alg = true,
        discovery = "https://keycloak.local.adiachan.cn/auth/realms/master/.well-known/openid-configuration",
        client_id = "nginx",
        client_secret = "2wyyL4VAuk1MCcY0ceuDiuNipfxiuaQD",
        redirect_uri_scheme = "https",
        logout_path = "/logout",
        redirect_after_logout_uri = "https://keycloak.local.adiachan.cn/auth/realms/master/protocol/openid-connect/logout?redirect_uri=https://ubuntu.local.adiachan.cn/",
        redirect_after_logout_with_id_token_hint = false,
        session_contents = {id_token=true}
    }
    -- call introspect for OAuth 2.0 Bearer Access Token validation
    local res, err = require("resty.openidc").authenticate(opts)
    if err then
        ngx.status = 403
        ngx.say(err)
        ngx.exit(ngx.HTTP_FORBIDDEN)
        end
    ';

    # I disabled caching so the browser won't cache the site.
    expires           0;
    add_header        Cache-Control private;

    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }

    # redirect server error pages to the static page /40x.html
    #
    error_page 404 /404.html;
        location = /40x.html {
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root   /usr/local/openresty/nginx/html;
    }
}
